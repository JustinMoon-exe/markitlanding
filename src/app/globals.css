@tailwind base;
@tailwind components;
@tailwind utilities;

/* :root {
  CSS variables for transparent colors if using inline styles with them,
  but for this version, we're defining colors directly in Tailwind config.
  --color-markit-orange-transparent-10: rgba(255, 116, 0, 0.07);
  ...
} */

body {
  @apply bg-dark-bg text-off-white font-amiko min-h-screen overflow-x-hidden;
  background-image:
    theme('backgroundImage.noise'),
    radial-gradient(ellipse at top right, theme('colors.markit-maroon / 10%'), transparent 70%),
    radial-gradient(ellipse at bottom left, theme('colors.markit-orange / 8%'), transparent 70%);
  background-attachment: fixed;
}

.glass-card {
  @apply bg-glass-bg backdrop-blur-[8px] border border-glass-border rounded-lg shadow-xl;
  transition: all 0.3s ease-in-out;
}

.glass-card:hover {
  box-shadow: 0 0 10px rgba(255, 116, 0, 0.4);
  border-color: rgba(255, 116, 0, 0.4);
}

.glass-card.purple-glow:hover {
  box-shadow: 0 0 10px rgba(90, 61, 115, 0.4);
  border-color: rgba(90, 61, 115, 0.4);
}

.glass-card.maroon-glow:hover {
  box-shadow: 0 0 10px rgba(159, 122, 234, 0.4);
  border-color: rgba(159, 122, 234, 0.4);
}

@keyframes moveHorizontal {
  0% { transform: translateX(-100%); filter: opacity(0%); }
  10% { filter: opacity(100%); }
  90% { filter: opacity(100%); }
  100% { transform: translateX(100%); filter: opacity(0%); }
}

@keyframes moveVertical {
  0% { transform: translateY(-100%); filter: opacity(0%); }
  10% { filter: opacity(100%); }
  90% { filter: opacity(100%); }
  100% { transform: translateY(100%); filter: opacity(0%); }
}

@keyframes ping {
  0% { transform: scale(0.5); opacity: 0; }
  50% { transform: scale(1.5); opacity: 0.8; }
  100% { transform: scale(2); opacity: 0; }
}

.animate-moveHorizontal {
  animation: moveHorizontal 10s ease-in-out infinite;
}

.animate-moveVertical {
  animation: moveVertical 10s ease-in-out infinite;
}

.animate-ping {
  animation: ping 2s cubic-bezier(0, 0, 0.2, 1) infinite;
}